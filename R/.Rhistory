HH2 <- hist(Tdata$temp, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(Tdata$temp, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(30, 0.08, paste("N =", sum(complete.cases(wdata$temperatureMoyHL))), cex = 1.2,  col = "black")
text(05, 0.06, paste("N =", sum(complete.cases(Tdata$temp))), cex = 1.2,  col = "red")
hist(wdata$humidity * 100, breaks = BRh, freq=F,
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction du taux d'humidité \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densités",
xlab = "Taux d'humidité (p.100)")
HH2 <- hist(Hdata$hum, breaks = BRh,  plot=F)
lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(Hdata$hum, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(55, 0.03, paste("N =", sum(complete.cases(wdata$humidity), na.rm = FALSE)), cex = 0.8,  col = "black")
text(55, 0.03, paste("N =", sum(complete.cases(wdata$humidity), na.rm = FALSE)), cex = 1.1,  col = "black")
text(90, 0.025, paste("N =", sum(complete.cases(Hdata$hum), na.rm = FALSE)), cex = 1.1,  col = "blue")
text(92, 0.025, paste("N =", sum(complete.cases(Hdata$hum), na.rm = FALSE)), cex = 1.1,  col = "blue")
#Remove all objects
rm(list = ls() )
### Or, if .csv file, use this si données séparées par ";"
wdata <- read.csv("Export_signalemnts_metro_V3.csv", header = TRUE, sep = ";", dec = ".")
Tdata <- read.csv("dayTempMF.csv", header = TRUE, sep = ";", dec = ".")
ls(Tdata)
str(Tdata)
summary(Tdata)
### Or, if .csv file, use this si données séparées par ";"
wdata <- read.csv("Export_signalemnts_metro_V3.csv", header = TRUE, sep = ";", dec = ".")
Tdata <- read.csv("dayTempMF.csv", header = TRUE, sep = ";", dec = ".")
Tdata <- read.csv("dayTempMF_v2.csv", header = TRUE, sep = ";", dec = ".")
Hdata <- read.csv("dayMoistMF_v2.csv", header = TRUE, sep = ";", dec = ".")
SDdata <- read.csv("daySDMF_v2.csv", header = TRUE, sep = ";", dec = ".")
View(wdata)
View(SDdata)
summary(SDdata)
hist(wdata$temperatureMoyHL, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction des températures moyennes \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densités",
xlab = "Températures moyennes (T°C)"
)
#### on définit les breaks pour l'abscisse commune
BRt <- seq(from= -10, to= 40, by=2) ## tient compte des deux distibutions
hist(wdata$temperatureMoyHL, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction des températures moyennes \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densités",
xlab = "Températures moyennes (T°C)"
)
HH2 <- hist(Tdata$temp, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(Tdata$temp, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(30, 0.08, paste("N =", sum(complete.cases(wdata$temperatureMoyHL))), cex = 1.2,  col = "black")
text(05, 0.06, paste("N =", sum(complete.cases(Tdata$temp))), cex = 1.2,  col = "red")
lines(density(Tdata$temp_p15D, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
hist(wdata$temperatureMoyHL, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction des températures moyennes \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densités",
xlab = "Températures moyennes (T°C)"
)
HH2 <- hist(Tdata$temp, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(Tdata$temp, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(30, 0.08, paste("N =", sum(complete.cases(wdata$temperatureMoyHL))), cex = 1.2,  col = "black")
text(05, 0.06, paste("N =", sum(complete.cases(Tdata$temp))), cex = 1.2,  col = "red")
lines(density(Tdata$temp_p15D, na.rm = TRUE), lwd = 2, col = "green") ### courbe lissée, kernel
summary(wdata)
summary(Tdata)
t.test(density(Tdata$temp, na.rm = TRUE),wdata$temperatureMoyHL)
t.test(Tdata$temp, na.rm = TRUE,wdata$temperatureMoyHL)
t.test(Tdata$temp,wdata$temperatureMoyHL)
t.test(Tdata$temp,wdata$temperatureMoyHL)
t.test(Tdata$temp_p1D,wdata$temperatureMoyHL)
t.test(Tdata$temp_p15D,wdata$temperatureMoyHL)
t.test(Tdata$temp_p2D,wdata$temperatureMoyHL)
kruskal.test(Tdata$temp,wdata$temperatureMoyHL) ## ~ signifie : "en fonction de"
### Import des données pour le test kruskal.test()
kwtdata <- read.csv("KW_temp_sign_MF.csv", header = TRUE, sep = ";", dec = ".")
View(kwtdata)
summary(kwtdata)
kruskal.test(temp ~ type, data = kwtdata) ## ~ signifie : "en fonction de"
hist(wdata$temperatureMoyHL, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction des températures moyennes \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densités",
xlab = "Températures moyennes (T°C)"
)
HH2 <- hist(Tdata$temp, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(Tdata$temp, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(30, 0.08, paste("N =", sum(complete.cases(wdata$temperatureMoyHL))), cex = 1.2,  col = "black")
text(05, 0.06, paste("N =", sum(complete.cases(Tdata$temp))), cex = 1.2,  col = "red")
lines(density(Tdata$temp_p15D, na.rm = TRUE), lwd = 2, col = "green") ### courbe lissée, kernel
lines(density(Tdata$temp_p2D, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
####Après avoir vérifié que le nombre d'obs n'est pas égal avec
length(wdata$humidity)
length(Hdata$hum)
##### et que l'étendue n'est pas la même
range(wdata$humidity)
range(Hdata$hum, na.rm = TRUE)
#### on définit les breaks pour l'abscisse commune
BRh <- seq(from= 30, to= 100, by=5) ## tient compte des deux distibutions
hist(wdata$humidity * 100, breaks = BRh, freq=F,
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction du taux d'humidité \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densités",
xlab = "Taux d'humidité (p.100)")
HH2 <- hist(Hdata$hum, breaks = BRh,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(Hdata$hum, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(55, 0.03, paste("N =", sum(complete.cases(wdata$humidity), na.rm = FALSE)), cex = 1.1,  col = "black")
text(92, 0.025, paste("N =", sum(complete.cases(Hdata$hum), na.rm = FALSE)), cex = 1.1,  col = "blue")
### t.test entre les différentes températures
t.test(Hdata$hum,wdata$humidity) #
t.test(Hdata$hum_m1pc,wdata$humidity)
### t.test entre les différentes températures
t.test(Hdata$hum,wdata$humidity * 100) #
t.test(Hdata$hum_m1pc,wdata$humidity * 100)
t.test(Hdata$hum_m2pc,wdata$humidity * 100)
t.test(Hdata$hum_p1pc,wdata$humidity * 100)
### Import des données pour le test kruskal.test() sur données Hdata$hum,wdata$humidity *100
kwhdata <- read.csv("KW_hum_sign_MF.csv", header = TRUE, sep = ";", dec = ".")
summary(kwhdata)
kruskal.test(hum ~ type, data = kwhdata) ## ~ signifie : "en fonction de"
lines(density(Hdata$hum_m1pc, na.rm = TRUE), lwd = 2, col = "green") ### courbe lissée, kernel
t.test(Hdata$hum_m2pc,wdata$humidity * 100)
lines(density(Hdata$hum_m2pc, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
t.test(Hdata$hum_m1pc,wdata$humidity * 100)
t.test(Hdata$hum_m2pc,wdata$humidity * 100)
####Après avoir vérifié que le nombre d'obs n'est pas égal avec
length(wdata$SaturatDeficit)
length(SDdata$SD)
##### et que l'étendue n'est pas la même
range(wdata$SaturatDeficit)
range(SDdata$SD)
range(SDdata$SD, na.rm = TRUE)
#### on définit les breaks pour l'abscisse commune
BRsd <- seq(from= 0, to= 20, by=1) ## tient compte des deux distibutions
hist(wdata$SaturatDeficit, breaks = BRsd, freq=F,
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction du déficit de saturation (SD) \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densité",
xlab = "Déficit de saturation (mmHg)")
HH2 <- hist(SDdata$SD, breaks = BRsd,  plot=F)
# lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(SDdata$SD, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(30, 0.08, paste("N =", sum(complete.cases(wdata$SaturatDeficit))), cex = 0.8,  col = "black")
text(05, 0.06, paste("N =", sum(complete.cases(SDdata$SD))), cex = 0.8,  col = "blue")
text(05, 0.08, paste("N =", sum(complete.cases(wdata$SaturatDeficit))), cex = 0.8,  col = "black")
text(05, 0.18, paste("N =", sum(complete.cases(wdata$SaturatDeficit))), cex = 0.8,  col = "black")
text(08, 0.18, paste("N =", sum(complete.cases(wdata$SaturatDeficit))), cex = 0.8,  col = "black")
text(08, 0.06, paste("N =", sum(complete.cases(SDdata$SD))), cex = 0.8,  col = "blue")
text(12, 0.06, paste("N =", sum(complete.cases(SDdata$SD))), cex = 0.8,  col = "blue")
text(10, 0.06, paste("N =", sum(complete.cases(SDdata$SD))), cex = 0.8,  col = "blue")
hist(wdata$SaturatDeficit, breaks = BRsd, freq=F,
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction du déficit de saturation (SD) \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densité",
xlab = "Déficit de saturation (mmHg)")
# lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(SDdata$SD, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(08, 0.18, paste("N =", sum(complete.cases(wdata$SaturatDeficit))), cex = 0.8,  col = "black")
text(10, 0.06, paste("N =", sum(complete.cases(SDdata$SD))), cex = 0.8,  col = "blue")
hist(wdata$SaturatDeficit, breaks = BRsd, freq=F,
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction du déficit de saturation (SD) \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densités",
xlab = "Déficit de saturation (mmHg)")
HH2 <- hist(SDdata$SD, breaks = BRsd,  plot=F)
# lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(SDdata$SD, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(08, 0.18, paste("N =", sum(complete.cases(wdata$SaturatDeficit))), cex = 0.8,  col = "black")
text(10, 0.06, paste("N =", sum(complete.cases(SDdata$SD))), cex = 0.8,  col = "blue")
hist(wdata$SaturatDeficit, breaks = BRsd, freq=F,
col="grey",
main = "Nombre de signalements de piqûres de tiques en fonction du déficit de saturation (SD) \n (France, juillet 17 - août 18), 5 919 échantillons humains",
ylab = "Densités",
xlab = "Déficit de saturation (mmHg)")
HH2 <- hist(SDdata$SD, breaks = BRsd,  plot=F)
# lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(SDdata$SD, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(08, 0.18, paste("N =", sum(complete.cases(wdata$SaturatDeficit))), cex = 1.1,  col = "black")
text(10, 0.06, paste("N =", sum(complete.cases(SDdata$SD))), cex = 1.1,  col = "blue")
### t.test entre les différents déficits de saturation
t.test(SDdata$SD,wdata$SaturatDeficit) #
t.test(SDdata$SD_15C_m1pcHR,wdata$SaturatDeficit)
t.test(SDdata$SD_2C_m2pcHR,wdata$SaturatDeficit)
### Import des données pour le test kruskal.test() sur données SDdata$SD,wdata$SaturatDeficit
kwSDdata <- read.csv("KW_SD_sign_MF.csv", header = TRUE, sep = ";", dec = ".")
summary(kwSDdata)
kruskal.test(SD ~ type, data = kwSDdata) ## ~ signifie : "en fonction de"
### t.test entre les différents déficits de saturation
t.test(SDdata$SD,wdata$SaturatDeficit) #
kruskal.test(SD ~ type, data = kwSDdata) ## ~ signifie : "en fonction de"
lines(density(SDdata$SD_15C_m1pcHR, na.rm = TRUE), lwd = 2, col = "green") ### courbe lissée, kernel
lines(density(SDdata$SD_2C_m2pcHR, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
t.test(SDdata$SD_15C_m1pcHR,wdata$SaturatDeficit)
kruskal.test(SD ~ type, data = kwSDdata) ## ~ signifie : "en fonction de"
t.test(SDdata$SD_15C_m1pcHR,wdata$SaturatDeficit)
### t.test entre les différents déficits de saturation
t.test(SDdata$SD,wdata$SaturatDeficit) #
### t.test entre les différents déficits de saturation
t.test(SDdata$SD,wdata$SaturatDeficit) #
kruskal.test(SD ~ type, data = kwSDdata) ## ~ signifie : "en fonction de"
t.test(SDdata$SD_15C_m1pcHR,wdata$SaturatDeficit)
t.test(SDdata$SD_2C_m2pcHR,wdata$SaturatDeficit)
setwd("D:\3VG\MSH\Lyme\Smartick17\data\morsures\citique_aout18\R")
setwd("D:/3VG/MSH/Lyme/Smartick17/data/morsures/citique_aout18/R")
wdata <- read.csv("citiqueData082018outputFinal.csv", sep = ';', stringsAsFactors = FALSE)
rm(dateMorsure)
getwd()
ls(wdata)
str(wdata)
summary(wdata)
# SEX
pie(table(wdata$SEX), main = "Sexe")
# AGE
pie(table(wdata$AGE), main = "Ãge")
pie(table(wdata$LANDSCAPE), main = "Paysage")
# Dominante mÃ©tÃ©o
pie(table(wdata$icon), main = "Dominante mÃ©tÃ©o")
# Dominante mÃ©tÃ©o
pie(table(wdata$icon), main = "Dominante météo")
# AGE
pie(table(wdata$AGE), main = "Âge")
pie(table(wdata$ACTIVITY), main = "Activité pendant la morsure")
# Humidité
hist(wdata$humidity,
breaks = 50,
col="grey",
main = "FrÃ©quence des morsures par humiditÃ© (%) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "humiditÃ© (%)")
# Humidité
hist(wdata$humidity,
breaks = 50,
col="grey",
main = "Fréquence des morsures en fonction de l'humidité relative \n 10640 Ã©chantillons humains",
ylab = "Fréquence absolue",
xlab = "humidité (fréq. relat.)")
# Humidité
hist(wdata$humidity,
breaks = 50,
col="grey",
main = "Fréquence des morsures en fonction de l'humidité relative \n 10640 échantillons humains",
ylab = "Fréquence absolue",
xlab = "humidité (fréq. relat.)")
# Pression
hist(wdata$pressure,
breaks = 40,
col="grey",
main = "FrÃ©quence des morsures par pression athmosphÃ©rique (hPa) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "pression athmosphÃ©rique (hPa)")
hist(wdata$precipIntensity,
breaks = 210,
col="grey",
main = "FrÃ©quence des morsures par intensitÃ© de prÃ©cipitation (mm/h) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "intensitÃ© de prÃ©cipitation (mm/h)")
hist(wdata$cloudCover,
breaks = 100,
col="grey",
main = "FrÃ©quence des morsures par couvert nuageux (%) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "couvert nuageux (%)")
hist(wdata$dewPoint,
breaks = 30,
col="grey",
main = "FrÃ©quence des morsures par point de rosÃ©e (Â°C) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "point de rosÃ©e (Â°C)")
hist(wdata$temperatureHigh,
breaks = 30,
col="grey",
main = "FrÃ©quence des morsures par tempÃ©rature de jour (Â°C) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "tempÃ©rature de jour (Â°C)")
hist(wdata$temperatureLow,
breaks = 30,
col="grey",
main = "FrÃ©quence des morsures par tempÃ©rature de nuit (Â°C) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "tempÃ©rature de nuit (Â°C)")
barplot(table(wdata$uvIndex),
col="grey",
main = "FrÃ©quence des morsures par rayonnement UV (Ã©chelle de l'OMS 1-10) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "rayonnement UV (Ã©chelle de 1-10) ")
hist(wdata$visibility,
breaks=24,
col="grey",
main = "FrÃ©quence des morsures par visibilitÃ© athmosphÃ©rique (km) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "visibilitÃ© athmosphÃ©rique (km)")
hist(table(wdata$windSpeed),
breaks = 50,
col="grey",
main = "FrÃ©quence des morsures par vitesse du vent (m/s) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "vitesse du vent (m/s)")
hist(wdata$windGust,
breaks = 50,
col="grey",
main = "FrÃ©quence des morsures par rafale de vent (m/s) \n 10640 Ã©chantillons humains",
ylab = "FrÃ©quence",
xlab = "rafale de vent (m/s)")
## 1.1 XPS13
setwd("C:/3VG/MSH/lyme/Smartick17/data/morsures/180820/R") ## chemin modifi? "180820" remplace "citique_aout18"
getwd()
#Remove all objects
rm(list = ls() )
rm()
source('C:/3VG/MSH/Lyme/Smartick17/data/morsures/180820/R/smartick_meteo_v3.R')
### Or, if .csv file, use this si donn?es s?par?es par ";"
wdata <- read.csv("Export_signalemnts_metro_V3.csv", header = TRUE, sep = ";", dec = ".")
View(wdata)
Tdata <- read.csv("dayTempMF_v2.csv", header = TRUE, sep = ";", dec = ".")
Hdata <- read.csv("dayMoistMF_v2.csv", header = TRUE, sep = ";", dec = ".")
SDdata <- read.csv("daySDMF_v2.csv", header = TRUE, sep = ";", dec = ".")
ls(wdata) ## liste les variables
ls(Tdata)
ls(Hdata)
ls(SDdata)
str(wdata) ##  a diagnostic function and an alternative to summary
str(Tdata)
str(Hdata)
str(SDdata)
summary(wdata)
summary(Tdata)
summary(Hdata)
summary(SDdata)
####Apr?s avoir v?rifi? que le nombre d'obs n'est pas ?gal avec
length(wdata$temperatureMoyHL)
length(Tdata$temp)
##### et que l'?tendue n'est pas la m?me
range(wdata$temperatureMoyHL)
range(Tdata$temp, na.rm = TRUE)
#### on d?finit les breaks pour l'abscisse commune
BRt <- seq(from= -10, to= 40, by=2) ## tient compte des deux distibutions
hist(wdata$temperatureMoyHL, breaks = BRt,
freq=F, # fr?quences
col="grey",
main = "Nombre de signalements de piq?res de tiques en fonction des temp?ratures moyennes \n (France, juillet 17 - ao?t 18), 5 919 ?chantillons humains",
ylab = "Densit?s",
xlab = "Temp?ratures moyennes (T?C)"
)
HH2 <- hist(Tdata$temp, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non liss?e
lines(density(Tdata$temp, na.rm = TRUE), lwd = 2, col = "red") ### courbe liss?e, kernel
text(30, 0.08, paste("N =", sum(complete.cases(wdata$temperatureMoyHL))), cex = 1.2,  col = "black")
text(05, 0.06, paste("N =", sum(complete.cases(Tdata$temp))), cex = 1.2,  col = "red")
### t.test entre les diff?rentes temp?ratures
t.test(Tdata$temp,wdata$temperatureMoyHL) #
# définition du chemin
setwd("./")
getwd()
## donées darksky
wadata <- read.csv("../../data/donnee_signalements_avec_meteo_dsk/citik_humains_clean_weather_strict.csv", sep = ',', quote = "'", stringsAsFactors = FALSE)
## 1.1 XPS13
setwd("C:/3VG/MSH/lyme/Smartick17/pycitique/R") ## chemin modifi? "180820" remplace "citique_aout18"
getwd()
#Remove all objects
rm(list = ls() )
rm()
### Or, if .csv file, use this si données séparées par ";"
DSKdata <- read.csv("../../data/donnee_meteo_nationale_comparative/darksky/darksky_moyennes_journalieres_maille_42_vg.csv", header = TRUE, sep = ";", dec = ".")
### Or, if .csv file, use this si données séparées par ";"
DSKdata <- read.csv("../data/donnee_meteo_nationale_comparative/darksky/darksky_moyennes_journalieres_maille_42_vg.csv", header = TRUE, sep = ";", dec = ".")
MFdata <- read.csv("../data/donnee_meteo_nationale_comparative/meteoFrance/mf_moyennes_journalieres_42_vg.csv", header = TRUE, sep = ";", dec = ".")
ls(DSKdata) ## liste les variables
ls(MFdata)
str(DSKdata) ##  a diagnostic function and an alternative to summary
str(MFdata)
summary(DSKdata)
summary(MFdata)
#Remove all objects
rm(list = ls() )
rm()
### Or, if .csv file, use this si données séparées par ";"
DSKdata <- read.csv("../data/donnee_meteo_nationale_comparative/darksky/darksky_moyennes_journalieres_maille_42_vg.csv", header = TRUE, sep = ";", dec = ".")
MFdata <- read.csv("../data/donnee_meteo_nationale_comparative/meteoFrance/mf_moyennes_journalieres_42_vg.csv", header = TRUE, sep = ";", dec = ".")
####Après avoir vérifié que le nombre d'obs n'est pas égal avec
length(DSKdata$temperature)
length(MFdata$temperature)
##### et que l'étendue n'est pas la même
range(DSKdata$temperature)
range(MFdata$temperature, na.rm = TRUE)
##### et que l'étendue n'est pas la même
range(DSKdata$temperature, na.rm = TRUE)
range(MFdata$temperature, na.rm = TRUE)
#### on définit les breaks pour l'abscisse commune
BRt <- seq(from= -5, to= 30, by=2) ## tient compte des deux distributions
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(30, 0.08, paste("N =", sum(complete.cases(DSKdata$temperature))), cex = 1.2,  col = "black")
text(05, 0.06, paste("N =", sum(complete.cases(MFdata$temperature))), cex = 1.2,  col = "red")
text(10, 0.08, paste("N =", sum(complete.cases(DSKdata$temperature))), cex = 1.2,  col = "black")
text(05, 0.08, paste("N =", sum(complete.cases(DSKdata$temperature))), cex = 1.2,  col = "black")
text(05, 0.06, paste("N =", sum(complete.cases(DSKdata$temperature))), cex = 1.2,  col = "black")
text(05, 0.07, paste("N =", sum(complete.cases(DSKdata$temperature))), cex = 1.2,  col = "black")
text(04, 0.07, paste("N =", sum(complete.cases(DSKdata$temperature))), cex = 1.2,  col = "black")
text(03, 0.06, paste("N =", sum(complete.cases(MFdata$temperature))), cex = 1.2,  col = "red")
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(04, 0.07, paste("N =", sum(complete.cases(DSKdata$temperature))), cex = 1.2,  col = "black")
text(03, 0.06, paste("N =", sum(complete.cases(MFdata$temperature))), cex = 1.2,  col = "red")
### t.test entre les diff?rentes temp?ratures
t.test(MFdata$temperature,DSKdata$temperature) #
text(04, 0.07, paste("Origine =", "Darksky"), cex = 1.2,  col = "black")
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(04, 0.07, paste("Origine =", "Darksky"), cex = 1.2,  col = "black")
text(03, 0.06, paste("Origine =", "Météo France"), cex = 1.2,  col = "red")
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(04, 0.07, paste("Darksky"), cex = 1.2,  col = "black")
text(03, 0.06, paste("Météo France"), cex = 1.2,  col = "red")
text(03, 0.05, paste("Météo France"), cex = 1.2,  col = "red")
text(04, 0.07, paste("Darksky"), cex = 1.2,  col = "black")
text(03, 0.06, paste("Météo France"), cex = 1.2,  col = "red")
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(03, 0.07, paste("Darksky"), cex = 1.2,  col = "black")
text(02, 0.06, paste("Météo France"), cex = 1.2,  col = "red")
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures for 42 synoptic stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(03, 0.07, paste("Darksky"), cex = 1.2,  col = "black")
text(02, 0.06, paste("Météo France"), cex = 1.2,  col = "red")
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures for 42 Météo France synoptic stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures for 42 Météo France Synoptic Stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "red") ### courbe lissée, kernel
text(03, 0.07, paste("Darksky"), cex = 1.2,  col = "black")
text(02, 0.06, paste("Météo France"), cex = 1.2,  col = "red")
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures for 42 Météo France Synoptic Stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(03, 0.07, paste("Darksky"), cex = 1.2,  col = "black")
text(02, 0.06, paste("Météo France"), cex = 1.2,  col = "blue")
