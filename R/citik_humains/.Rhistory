cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,"temperature"], type='dsk')
mfdf <- data.frame(param=paramMF[,'temperature'], type='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____Objet de donnée pour KW Fabriqué____\n")
v <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,"temperature"], type='dsk')
mfdf <- data.frame(param=paramMF[,'temperature'], type='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____Objet de donnée pour KW Fabriqué____\n")
dskdf <- data.frame(param=DSKdata_42avg[,"temperature"], type='dsk')
mfdf <- data.frame(param=paramMF[,'temperature'], type='mf')
mfdf <- data.frame(param=MFdata[,'temperature'], type='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____Objet de donnée pour KW Fabriqué____\n")
v <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,"temperature"], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,'temperature'], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____Objet de donnée pour KW Fabriqué____\n")
v <- wilcox.test(param ~ data_provider, data = kwcoxdata)
v
for(val in v){
print(val)
}
v$null.value
v$alternative
v$method
v$data.name
v$parameter
v$statistic[[1]]
v$parameter[[1]]
v$p.value[[1]]
wilcox_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
wilcox_List <- list()
wilcox_matrix <- matrix(nrow=3,ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], type='dsk')
mfdf <- data.frame(param=paramMF[,parammf], type='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]],
test_result$parameter[[1]] )
wilcox_matrix[,i] <- test_result_vector
i=i+1
}
t_table <- as.data.frame(wilcox_matrix)
names(wilcox_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF', 'ddl_vs_MF')
return(wilcox_table)
}
m <- wilcox_table(dsk_paramnames, mf_paramnames)
wilcox_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
wilcox_List <- list()
wilcox_matrix <- matrix(nrow=3,ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], type='dsk')
mfdf <- data.frame(param=MFdata[,parammf], type='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]],
test_result$parameter[[1]] )
wilcox_matrix[,i] <- test_result_vector
i=i+1
}
t_table <- as.data.frame(wilcox_matrix)
names(wilcox_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF', 'ddl_vs_MF')
return(wilcox_table)
}
m <- wilcox_table(dsk_paramnames, mf_paramnames)
wilcox_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
wilcox_List <- list()
wilcox_matrix <- matrix(nrow=3,ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]],
test_result$parameter[[1]] )
wilcox_matrix[,i] <- test_result_vector
i=i+1
}
t_table <- as.data.frame(wilcox_matrix)
names(wilcox_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF', 'ddl_vs_MF')
return(wilcox_table)
}
m <- wilcox_table(dsk_paramnames, mf_paramnames)
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]],
test_result$parameter[[1]] )
wilcox_matrix[,i] <- test_result_vector
i=i+1
}
wilcox_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
wilcox_matrix <- matrix(nrow=3, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]],
test_result$parameter[[1]] )
wilcox_matrix[,i] <- test_result_vector
i=i+1
}
t_table <- as.data.frame(wilcox_matrix)
names(wilcox_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF', 'ddl_vs_MF')
return(wilcox_table)
}
m <- wilcox_table(dsk_paramnames, mf_paramnames)
v$statistic[[1]]
v$parameter[[1]]
v$p.value[[1]]
wilcox_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
wilcox_matrix <- matrix(nrow=2, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]])
wilcox_matrix[,i] <- test_result_vector
i=i+1
}
t_table <- as.data.frame(wilcox_matrix)
names(wilcox_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF', 'ddl_vs_MF')
return(wilcox_table)
}
m <- wilcox_table(dsk_paramnames, mf_paramnames)
wilcox_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
wilcox_matrix <- matrix(nrow=2, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]])
wilcox_matrix[,i] <- test_result_vector
i=i+1
}
wilcox_table <- as.data.frame(wilcox_matrix)
names(wilcox_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF', 'ddl_vs_MF')
return(wilcox_table)
}
m <- wilcox_table(dsk_paramnames, mf_paramnames)
wilcox_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
wilcox_matrix <- matrix(nrow=2, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]])
wilcox_matrix[,i] <- test_result_vector
i=i+1
}
wilcox_table <- as.data.frame(wilcox_matrix)
names(wilcox_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF')
return(wilcox_table)
}
m <- wilcox_table(dsk_paramnames, mf_paramnames)
datatable(m)
kruskal_wallis_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
kw_matrix <- matrix(nrow=2, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- kruskal.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]])
kw_matrix[,i] <- test_result_vector
i=i+1
}
kw_table <- as.data.frame(kw_matrix)
names(kw_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF')
return(wilcox_table)
}
m <- kruskal_wallis_table(dsk_paramnames, mf_paramnames)
v <- kruskal_wallis_table(param ~ data_provider, data = kwcoxdata)
v <- kruskal_wallis_table(param ~ data_provider, data = kwcoxdata)
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,"temperature"], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,'temperature'], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____Objet de donnée pour KW Fabriqué____\n")
v <- kruskal_wallis_table(param ~ data_provider, data = kwcoxdata)
kruskal_wallis_table(param ~ data_provider, data = kwcoxdata)
v <- kruskal.test(param ~ data_provider, data = kwcoxdata)
v$statistic[[1]]
v$statistic[[1]]
v$parameter[[1]]
v$p.value[[1]]
v$method
v$data.name
kruskal_wallis_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
kw_matrix <- matrix(nrow=2, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- kruskal.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]])
kw_matrix[,i] <- test_result_vector
i=i+1
}
kw_table <- as.data.frame(kw_matrix)
names(kw_table) <- dsk_paramnames
rownames(wilcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF')
return(wilcox_table)
}
m <- kruskal_wallis_table(dsk_paramnames, mf_paramnames)
kruskal_wallis_table <- function (dsk_paramnames, mf_paramnames){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
kw_matrix <- matrix(nrow=2, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
test_result <- kruskal.test(param ~ data_provider, data = kwcoxdata)
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]])
kw_matrix[,i] <- test_result_vector
i=i+1
}
kw_table <- as.data.frame(kw_matrix)
names(kw_table) <- dsk_paramnames
rownames(kw_table) <- c('t.test_vs_MF', 'p.value_vs_MF')
return(kw_table)
}
m <- kruskal_wallis_table(dsk_paramnames, mf_paramnames)
datatable(m)
kwcox_table <- function (dsk_paramnames, mf_paramnames, test='wilcox'){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
kwcox_matrix <- matrix(nrow=2, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
if(test=='wilcox'){
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
} else if (test=='kruskal'){
est_result <- kruskal.test(param ~ data_provider, data = kwcoxdata)
}else{
print('Aucun nom de test valide fourni. tapez wilcox ou kruskal.')
}
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]])
kwcox_matrix[,i] <- test_result_vector
i=i+1
}
kwcox_table <- as.data.frame(kwcox_matrix)
names(kwcox_table) <- dsk_paramnames
rownames(kwcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF')
return(kwcox_table)
}
m <- kwcox_table(dsk_paramnames, mf_paramnames, test='wilcox')
datatable(m)
m <- kwcox_table(dsk_paramnames, mf_paramnames, test='kruskal')
kwcox_table <- function (dsk_paramnames, mf_paramnames, test='wilcox'){
# Liste vide pour accueillir les nom de parametres
paramlist <- list()
kwcox_matrix <- matrix(nrow=2, ncol = length(dsk_paramnames))
# boucle de remplissage de la liste de correspondance
for (i in 1:11){
# cat(dsk_paramnames[i], '|------>', mf_paramnames[i],'\n')
paramlist[[ dsk_paramnames[i] ]] <- c(dsk_paramnames[i], mf_paramnames[i])
}
i=1
# boucle de calcul iteratif des tests
for (param in paramlist ){
paramdsk <- param[1]
parammf <- param[2]
# Preparation de la donnee des tests
cat("____ Fabrication des données pour le test KW ____\n")
dskdf <- data.frame(param=DSKdata_42avg[,paramdsk], data_provider='dsk')
mfdf <- data.frame(param=MFdata[,parammf], data_provider='mf')
kwcoxdata <- rbind(dskdf,mfdf)
cat("____ Objet de donnée pour KW Fabriqué____\n")
if(test=='wilcox'){
test_result <- wilcox.test(param ~ data_provider, data = kwcoxdata)
} else if (test=='kruskal'){
test_result <- kruskal.test(param ~ data_provider, data = kwcoxdata)
}else{
print('Aucun nom de test valide fourni. tapez wilcox ou kruskal.')
}
cat(param[1], '|------>', param[2],'\n')
test_result_vector <- c(test_result$statistic[[1]],
test_result$p.value[[1]])
kwcox_matrix[,i] <- test_result_vector
i=i+1
}
kwcox_table <- as.data.frame(kwcox_matrix)
names(kwcox_table) <- dsk_paramnames
rownames(kwcox_table) <- c('t.test_vs_MF', 'p.value_vs_MF')
return(kwcox_table)
}
m <- kwcox_table(dsk_paramnames, mf_paramnames, test='kruskal')
datatable(m)
# Calcule de la table du test DSK vs MF pour le test de Wilcoxon
m <- kwcox_table(dsk_paramnames, mf_paramnames, test='wilcox')
datatable(m)
# Calcule de la table du test DSK vs MF pour le test de Kruskal-Wallis
m <- kwcox_table(dsk_paramnames, mf_paramnames, test='kruskal')
datatable(m)
# Cette ligne fabrique automatiquement tous les graphs de l’article
batch_histogram(dsk_paramnames, mf_paramnames)
# Ces lignes calculent puis affichent le tableau des tests de Shapiro de normalite
shapiro_df <- shapiro_batch(dsk_paramnames, mf_paramnames)
datatable(shapiro_df)
# Calcule de la table DSK vs MF au test t.test
m <- t.test_batch(dsk_paramnames, mf_paramnames)
datatable(m)
# Calcule de la table du test DSK vs MF pour le test de Wilcoxon
m <- kwcox_table(dsk_paramnames, mf_paramnames, test='wilcox')
datatable(m)
# Calcule de la table du test DSK vs MF pour le test de Kruskal-Wallis
m <- kwcox_table(dsk_paramnames, mf_paramnames, test='kruskal')
datatable(m)
