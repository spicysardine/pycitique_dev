assign(name, humdata$name)
}
humdata['apparenttemperaturelow']
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
rm(name)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
rm(name)
}
for( name in names(humdata) ) {
print(name)
assign(name, humdata[name])
# rm(name)
}
for( name in names(humdata) ) {
print(name)
obj <- assign(name, humdata[name])
rm(obj)
}
for( name in names(humdata) ) {
print(name)
obj <- assign(name, humdata[name])
rm(obj)
}
View(sunsettime)
View(temperaturehightime)
View(summary)
humdata['apparenttemperaturelow']
View(sex_pique)
for( name in names(humdata) ) {
print(name)
obj <- assign(name, humdata[name])
obj
}
x <- "A"
eval(parse(text=paste("df$", x, sep = "")))
eval(parse(text=paste("vect$", x, sep = "")))
eval(parse(text=paste("var$", x, sep = "")))
for( name in names(humdata) ) {
print(name)
assign(name, humdata[name])
parse(name)
}
eval("A")
eval(parse("A"))
parse("A")
parse(text="A")
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
obj <- parse(text=name)
rm(obj)
}
as.name('foo')
?as.name
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
obj <- parse(text=name)
as.name(name)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
obj <- parse(text=name)
obj_ <- as.name(obj)
rm(obj_)
}
eval(obj_)
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
obj <- parse(text=name)
obj_ <- as.name(obj)
eval(obj_)
# rm(obj_)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
obj <- call("<-", as.name(name), humdata[name])
# rm(obj_)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
obj <- call("<-", as.name(name), NULL)
# rm(obj_)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
obj <- call("<-", as.name(name), NULL)
# rm(obj_)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
obj <- eval(call("<-", as.name(name), NULL))
# rm(obj_)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
obj <- eval(call("<-", as.name(name), NULL))
rm(obj_)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
obj <- eval(call("<-", as.name(name), NULL))
rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
obj <- parse(text=name)
# obj <- eval(call("<-", as.name(name), NULL))
rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
obj <- parse(text=name)
rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
obj <- parse(text=name)
# obj <- eval(call("<-", as.name(name), NULL))
rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
obj <- parse(text=name)
# obj <- eval(call("<-", as.name(name), NULL))
rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
obj <- eval(call("<-", as.name(name), humdata[name] ) )
rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
call("<-", as.name(name), NULL )
# rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
call("<-", as.name(name), NULL )
# rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
call("<-", NULL, as.name(name)  )
# rm(obj)
}
for( name in names(humdata) ) {
print(name)
# assign(name, humdata[name])
# obj <- parse(text=name)
# call("<-", NULL, as.name(name)  )
rm(list = c(name))
}
?list
?rm
for(name in names(humdata)){
print(name)
# if (grepl())
}
for(name in names(humdata)){
if (grepl('time', name)){
print(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) ){
print(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperature|pressure', name) ){
print(name)
}
}
if (!grepl('time', name) & grepl('temperature|pressure|humid', name) ){
print(name)
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperature|pressure|humid', name) ){
print(name)
}
}
names(humdata)
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
decile(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
decile(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
decile(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperature', name) ){
decile(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperaturelow', name) ){
decile(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperaturelow', name) ){
print(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperaturelow', name) ){
decile(name)
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperaturelow', name) ){
decile(humdata[name])
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperaturelow', name) ){
decile(humdata[name])
}
}
for(name in names(humdata)){
if (!grepl('time', name) & grepl('temperaturelow', name) ){
humdata[name]
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperaturelow', name) ){
print(name)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperaturelow', name) ){
print(name)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperaturelow|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(name)
}
}
decile(humdata$temperature)
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperaturelow|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(name)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(name)
}
}
humdata$temperature
humdata['temperature']
humdata["temperature"]
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
humdata[name]
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(humdata[name])
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
decile(humdata[name])
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
param <-humdata[name]
decile(param)
rm(param)
}
}
decile <- function(param){
c1 <- c(0:999)*NA ## création d'une table remplie de 0
## ** pour initialiser les dimensions et la valeurs des cellules du dataframe qui suit
humDF=data.frame("decile_25"=c1,"decile_50"=c1,"decile_75"=c1) ## **création d'un DF initialisé avec les valeurs de c1 pour les cellules et le nombre de lignes.
## boucle qui calcule 1000 fois sur un échantillon de 50 tirages des moyennes ou les déciles un et neuf à partir du vecteur var
## /!\ il faut exclure les NA du calcul de la moyenne également /!\
## /!\ j'ai renommé le decile_3 en decile_75 /!\
for (i in 1:1000){
humDF$decile_25[i] <- quantile(sample(param,50,replace=T), 0.25, na.rm = T);
humDF$decile_50[i] <- quantile(sample(param,50,replace=T), 0.5, na.rm = T);
humDF$decile_75[i] <- quantile(sample(param,50,replace=T), 0.75, na.rm = T);
}
aa <- mean(humDF$decile_25) ## moyenne des 1000 1er quartiles
ba <- mean(humDF$decile_50) ## moyenne des 1000 2eme quartiles
ca <- mean(humDF$decile_75) ## moyenne des 1000 3eme quartiles
humDF_D25.sort=sort(humDF$decile_25)
humDF_D50.sort=sort(humDF$decile_50)
humDF_D75.sort=sort(humDF$decile_75)
length_ss_NA_humDF_D25.sort <- length(na.omit(humDF_D25.sort))
length_ss_NA_humDF_D50.sort <- length(na.omit(humDF_D50.sort))
length_ss_NA_humDF_D75.sort <- length(na.omit(humDF_D75.sort))
length_ss_NA_humDF_D25.sort
length_ss_NA_humDF_D50.sort
length_ss_NA_humDF_D75.sort
## c(humDF_D25.sort[25], humDF_D25.sort[975])
ab <- humDF_D25.sort[25]
ac <- humDF_D25.sort[975]
## c(humDF_D50.sort[25], humDF_D50.sort[975])
bb <- humDF_D50.sort[25]
bc <- humDF_D50.sort[975]
## c(humDF_D25.sort[25], humDF_D25.sort[975])
cb <- humDF_D75.sort[25]
cc <- humDF_D75.sort[975]
output_Fr=data.frame(aa, ab, ac, ba, bb, bc, ca, cb, cc)
print(output_Fr) ## affichage du résultat
# write.table(output_Fr,"results_quartil_Fr.txt", append = TRUE, sep=";", col.names = TRUE, row.names = TRUE)
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
param <-humdata[name]
decile(param)
rm(param)
}
}
decile(humdata$temperature)
decile(humdata$pressure)
rm(param)
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(name)
print(humdata$name)
# decile(param)
# rm(param)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(name)
print(humdata[name])
# decile(param)
# rm(param)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(name)
humdata[name]
# decile(param)
# rm(param)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid|uv|precip|cloud|visib|dew|win', name) ){
print(name)
eval(humdata[name])
# decile(param)
# rm(param)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature|pressure|humid', name) ){
print(name)
humdata[name]
# decile(param)
# rm(param)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature', name) ){
print(name)
humdata[name]
# decile(param)
# rm(param)
}
}
for (var in humdata){
print(var)
}
for(param in humdata ){
if (!grepl('time', as.name(param)) & grepl('temperature', as.name(param) ) ){
print(as.name(param))
# humdata[name]
# decile(param)
# rm(param)
}
}
as.name(humdata$pressure)
as.character(humdata$pressure)
names(humdata$pressure)
col.names(humdata$pressure)
colnames(humdata$pressure)
colnames(humdata)
colnames(humdata["temperature"])
names(humdata["temperature"])
for(param in humdata ){
if (!grepl('time', names(humdata["temperature"]) ) & grepl('temperature', names(humdata[param]) ) ) {
print(names(param))
# humdata[name]
# decile(param)
# rm(param)
}
}
typeof(var)
for (var in humdata){
typeof(var)
}
for (var in humdata){
print(typeof(var))
}
for (var in humdata){
decile(var)
}
for (var in humdata[,37:]){
decile(var)
}
for (var in humdata[,37:40]){
decile(var)
}
for (var in humdata[,71:73]){
decile(var)
}
# |pressure|humid|uv|precip|cloud|visib|dew|win|uv|precip|cloud|visib|dew|win
index = sapply(humdata, is.numeric)
index
for (var in humdata[,index]){
print(var)
}
for (var in humdata[,index]){
decile(var)
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature', name) ){
print(name)
# humdata[name]
# decile(param)
# rm(param)
}
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature', name) ){
print(name)
param <- humdata[,name]
decile(param)
# humdata[name]
# decile(param)
# rm(param)
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature', name) ){
print(name)
param <- humdata[,name]
decile(param)
# humdata[name]
# decile(param)
# rm(param)
}
}
exit
for (var in humdata[,index]){
decile(var)
}
for(name in names(humdata) ){
if (!grepl('time', name) & grepl('temperature', name) ){
print(name)
param <- humdata[,name]
decile(param)
# humdata[name]
# decile(param)
# rm(param)
}
}
