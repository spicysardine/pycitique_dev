## 1.1 XPS13
setwd("C:/3VG/MSH/lyme/Smartick17/pycitique/meteo/R")
getwd()
## 1.1 XPS13
setwd("C:/3VG/MSH/lyme/Smartick17/pycitique/meteo/R")
## 1.1 XPS13
setwd("C:/3VG/MSH/lyme/Smartick17/pycitique/meteo/R")
## 1.1 XPS13
setwd("C:/3VG/MSH/lyme/Smartick17/pycitique/R/meteo")
getwd()
#Remove all objects
rm(list = ls() )
rm()
### Or, if .csv file, use this si données séparées par ";"
DSKdata <- read.csv("../data/donnee_meteo_nationale_comparative/darksky/comparaison_vg/darksky_moyennes_journalieres_maille_42_vg.csv", header = TRUE, sep = ";", dec = ".")
### Or, if .csv file, use this si données séparées par ";"
DSKdata <- read.csv("../data/donnee_meteo_nationale_comparative/darksky/comparaison_vg/darksky_moyennes_journalieres_maille_42_vg.csv", header = TRUE, sep = ";", dec = ".")
### Or, if .csv file, use this si données séparées par ";"
DSKdata <- read.csv("../../data/donnee_meteo_nationale_comparative/darksky/comparaison_vg/darksky_moyennes_journalieres_maille_42_vg.csv", header = TRUE, sep = ";", dec = ".")
MFdata <- read.csv("../../data/donnee_meteo_nationale_comparative/meteoFrance/comparaison_vg/mf_moyennes_journalieres_42_vg.csv", header = TRUE, sep = ";", dec = ".")
ls(DSKdata) ## liste les variables
ls(MFdata)
####Après avoir vérifié que le nombre d'obs n'est pas égal avec
length(DSKdata$temperature)
length(MFdata$temperatureerature)
length(MFdata$temperature)
##### et que l'étendue n'est pas la même
range(DSKdata$temperature, na.rm = TRUE)
range(MFdata$temperature, na.rm = TRUE)
#### on définit les breaks pour l'abscisse commune
BRt <- seq(from= -5, to= 30, by=2) ## tient compte des deux distributions
hist(DSKdata$temperature, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures for 42 Météo France Synoptic Stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$temperature, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée  ## SO
lines(density(MFdata$temperature, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(03, 0.07, paste("Darksky"), cex = 1.2,  col = "black")
text(02, 0.06, paste("Météo France"), cex = 1.2,  col = "blue")
### t.test entre les différentes températures
t.test(MFdata$temperature,DSKdata$temperature) #
shapiro.test(MFdata$temperature)
shapiro.test(DSKdata$temperature)
## 1.1 XPS13
setwd("C:/3VG/MSH/lyme/Smartick17/pycitique/R/meteo")
getwd()
#Remove all objects
rm(list = ls() )
rm()
### Or, if .csv file, use this si données séparées par ";"
DSKdata <- read.csv("../../data/donnee_meteo_nationale_comparative/comparaison/darksky_moyennes_journalieres_maille_42_vg.csv", header = TRUE, sep = ";", dec = ".")
MFdata <- read.csv("../../data/donnee_meteo_nationale_comparative/comparaison/mf_moyennes_journalieres_42_vg.csv", header = TRUE, sep = ";", dec = ".")
ls(DSKdata) ## liste les variables
ls(MFdata)
### Import des données pour le test kruskal.test() sur données MFdata$temperature, DSKdata$temperature in : KW_temp_maille_42.csv
kwMFdata <- read.csv("../../data/donnee_meteo_nationale_comparative/comparaison/KW_temp_maille_42.csv", header = TRUE, sep = ";", dec = ".")
summary(kwMFdata)
kruskal.test(temp ~ type, data = kwMFdata) ## ~ signifie : "en fonction de"
View(kwMFdata)
### Import des données pour le test kruskal.test() sur données MFdata$temperature, DSKdata$temperature in : KW_temp_maille_42.csv
kwtempdata <- read.csv("../../data/donnee_meteo_nationale_comparative/comparaison/KW_temp_maille_42.csv", header = TRUE, sep = ";", dec = ".")
summary(kwMFdata)
summary(kwtempdata)
kruskal.test(temp ~ type, data = kwtempdata) ## ~ signifie : "en fonction de"
####Après avoir vérifié que le nombre d'obs n'est pas égal avec
length(DSKdata$humidity)
length(MFdata$humidite)
##### et que l'étendue n'est pas la même
range(DSKdata$humidity, na.rm = TRUE)
range(MFdata$humidite, na.rm = TRUE)
#### on définit les breaks pour l'abscisse commune
BRt <- seq(from= 45, to= 100, by=2) ## tient compte des deux distributions
hist(DSKdata$humidity, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures for 42 Météo France Synoptic Stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$humidite, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée  ## SO
lines(density(MFdata$humidite, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(03, 0.07, paste("Darksky"), cex = 1.2,  col = "black")
text(02, 0.06, paste("Météo France"), cex = 1.2,  col = "blue")
text(03, 0.04, paste("Darksky"), cex = 1.2,  col = "black")
text(02, 0.03, paste("Météo France"), cex = 1.2,  col = "blue")
text(50, 0.04, paste("Darksky"), cex = 1.2,  col = "black")
text(50, 0.03, paste("Météo France"), cex = 1.2,  col = "blue")
text(60, 0.04, paste("Darksky"), cex = 1.2,  col = "black")
text(55, 0.03, paste("Météo France"), cex = 1.2,  col = "blue")
hist(DSKdata$humidity, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Temperatures for 42 Météo France Synoptic Stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Temperatures (T°C)"
)
HH2 <- hist(MFdata$humidite, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée  ## SO
lines(density(MFdata$humidite, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(60, 0.04, paste("Darksky"), cex = 1.2,  col = "black")
text(55, 0.03, paste("Météo France"), cex = 1.2,  col = "blue")
hist(DSKdata$humidity, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean Humidity for 42 Météo France Synoptic Stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean Humidity (%)"
)
HH2 <- hist(MFdata$humidite, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée  ## SO
lines(density(MFdata$humidite, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(60, 0.04, paste("Darksky"), cex = 1.2,  col = "black")
text(55, 0.03, paste("Météo France"), cex = 1.2,  col = "blue")
shapiro.test(DSKdata$humidity) # W = 0.97673, p-value = 6.398e-13 => p-value significative, l'échantillon ne suit pas une loi normale.
shapiro.test(MFdata$humidite) # W = 0.97696, p-value = 7.649e-13 => p-value significative, l'échantillon ne suit pas une loi normale.
### t.test entre les différentes températures
t.test(MFdata$humidite,DSKdata$humidity) # t = -1.6278, df = 2379.9, p-value = 0.1037 => dommage, p-value non significative, les 2 échantillons ne sont pas significativement différents !
### Import des données pour le test kruskal.test() sur données MFdata$humidite, DSKdata$humidity in : KW_temp_maille_42.csv
kwhumdata <- read.csv("../../data/donnee_meteo_nationale_comparative/comparaison/KW_hum_maille_42.csv", header = TRUE, sep = ";", dec = ".")
summary(kwhumdata)
kruskal.test(temp ~ type, data = kwhumdata) ## ~ signifie : "en fonction de"
## 1.1 XPS13
setwd("C:/3VG/MSH/lyme/Smartick17/pycitique/R/meteo")
getwd()
#Remove all objects
rm(list = ls() )
rm()
### Or, if .csv file, use this si données séparées par ";"
DSKdata <- read.csv("../../data/donnee_meteo_nationale_comparative/comparaison/dsk_moyennes_journalieres_maille_42.csv", header = TRUE, sep = ";", dec = ".")
MFdata <- read.csv("../../data/donnee_meteo_nationale_comparative/comparaison/mf_moyennes_journalieres_maille_42.csv", header = TRUE, sep = ";", dec = ".")
head(DSKdata$dewpoint)
View(DSKdata)
d1 <- subset(DSKdata, select = c("dewpoint", "origine"))
dim(d1)
d2 <- subset(MFdata, select = c("point_rose", "origine"))
dim(d2)
kwptrosdata <- rbind(d1, d2)
names(MFdata)
names(d2)
names(d2)[1]
names(d2)[1]
names(d2)[1]<-"dewpoint"
names(d2)[1]
kwptrosdata <- rbind(d1, d2)
head(kwptrosdata)
summary(kwhumdata)
summary(kwptrosdata)
kruskal.test(dewpoint ~ origine, data = kwptrosdata) ## ~ signifie : "en fonction de"
####Après avoir vérifié que le nombre d'obs n'est pas égal avec
length(DSKdata$pressure)
length(MFdata$press_mer)
##### et que l'étendue n'est pas la même
range(DSKdata$pressure, na.rm = TRUE)
range(MFdata$press_mer, na.rm = TRUE)
#### on définit les breaks pour l'abscisse commune
BRt <- seq(from= 980, to= 1045, by=2) ## tient compte des deux distributions
hist(DSKdata$pressure, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean pressure for 42 Météo France Synoptic Stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean pressure (T°C)"
)
HH2 <- hist(MFdata$press_mer, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée  ## SO
lines(density(MFdata$press_mer, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(990, 0.03, paste("Météo France"), cex = 1.2,  col = "blue")
shapiro.test(DSKdata$pressure) # W = 0.97812, p-value = 1.924e-12 => p-value significative, l'échantillon ne suit pas une loi normale.
text(1000, 0.05, paste("Darksky"), cex = 1.2,  col = "black")
shapiro.test(MFdata$press_mer) # W = 0.97813, p-value = 1.932e-12 => p-value significative, l'échantillon ne suit pas une loi normale.
### t.test entre les différentes températures
t.test(MFdata$press_mer,DSKdata$pressure) # t = 0.063932, df = 2378.9, p-value = 0.949 => p-value non significative, les 2 échantillons ne sont pas significativement différents !
d1 <- subset(DSKdata, select = c("pressure", "origine")) ## création du subset venant de DSK
dim(d1)
d2 <- subset(MFdata, select = c("press_mer", "origine")) ## création du subset venant de MF
dim(d2)
## pour utiliser la fusion "rbind" il faut que les champs aient le même nom (c'est le 1er qui pose problème)
names(d2)[1]
names(d2)[1]<-"pressure" ## renommage du 1er champ du tableau 2
names(d2)[1]
kwptrosdata <- rbind(d1, d2) ## fusion des deux sous tableaux
head(kwptrosdata)
summary(kwptrosdata)
kruskal.test(pressure ~ origine, data = kwptrosdata) ## ~ signifie : "en fonction de"
hist(DSKdata$pressure, breaks = BRt,
freq=F, # fréquences
col="grey",
main = "Mean pressure for 42 Météo France Synoptic Stations \n (France, july 2017 - february 2020), 1 191 days",
ylab = "Densities",
xlab = "Mean pressure (hPa)"
)
HH2 <- hist(MFdata$press_mer, breaks = BRt,  plot=F)
#lines(HH2$mids, HH2$density, lwd = 2, col = "orange") ### courbe non lissée  ## SO
lines(density(MFdata$press_mer, na.rm = TRUE), lwd = 2, col = "blue") ### courbe lissée, kernel
text(1000, 0.05, paste("Darksky"), cex = 1.2,  col = "black")
text(990, 0.03, paste("Météo France"), cex = 1.2,  col = "blue")
